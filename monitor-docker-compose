version: '3.9'

services:
  api01: &api
    image: guiestimo/rinha-2024-q1-dotnet-api:latest
    hostname: api01
    container_name: rinha-2024-q1-api01
    environment: &env
      ConnectionStrings__RinhaDotNet: Host=rinha;Username=postgres;Password=root;Database=postgres;Pooling=true;Minimum Pool Size=50;Maximum Pool Size=2000;Multiplexing=true;Timeout=15;Command Timeout=15;Cancellation Timeout=-1;No Reset On Close=true;Max Auto Prepare=20;Auto Prepare Min Usages=1;
      DOTNET_DiagnosticPorts: /app/diag/dotnet-monitor.sock
    depends_on:
      - db
      - monitor
    volumes:
      - "./:/app/"
    entrypoint: [ "dotnet", "/app/rinha-de-backend-2024-q1-dotnet-API/bin/Debug/net8.0/rinha-de-backend-2024-q1-dotnet-API.dll" ]
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '80MB'
  api02:
    <<: *api
    hostname: api02
    container_name: rinha-2024-q1-api02
    environment:
      <<: *env
      DOTNET_DiagnosticPorts: ""

  monitor:
    image: mcr.microsoft.com/dotnet/monitor:8
    environment:
      DOTNETMONITOR_Storage__DefaultSharedPath: /diag
      DOTNETMONITOR_Metrics__Endpoints: http://+:52325
      DOTNETMONITOR_Urls: http://+:52323
      DOTNETMONITOR_DiagnosticPort__ConnectionMode: listen
      DOTNETMONITOR_DiagnosticPort__EndpointName: /diag/dotnet-monitor.sock
    command: [ "collect", "--urls", "http://+:52323", "--no-auth"]
    volumes:
      - "./diag:/diag"
    ports:
      - "52323:52323"
      - "52325:52325"

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "prometheus-data:/prometheus"
    healthcheck:
      test: ["CMD", "wget", "-c", "http://localhost:9090"]
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 40s

  grafana:
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    volumes:
      # https://grafana.com/docs/grafana/latest/administration/provisioning/
      - "./grafana/provisioning/:/etc/grafana/provisioning/"
      - "./grafana/dashboards/:/var/lib/grafana/dashboards/"
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "grafana-cli", "plugins", "ls"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  nginx:
    image: nginx:latest
    container_name: rinha-2024-q1-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '134MB'
  db:
    image: postgres:latest
    container_name: rinha-2024-q1-postgres
    hostname: rinha
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    command: 'postgres -c max_connections=300 -c shared_buffers=96MB -c checkpoint_timeout=600 -c synchronous_commit=off -c fsync=off -c full_page_writes=off -c work_mem=16MB'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '256MB'
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1

volumes:
  prometheus-data: